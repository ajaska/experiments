{"mappings":"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BACA,6BACA,8BAEH,CACG,6BACA,6BACA,6BACA,8BAEH,CACG,6BACA,6BACA,6BACA,8BAEH,CACG,6BACA,6BACA,6BACA,8BAEH,CACG,6BACA,6BACA,6BACA,8BAEH,CACG,6BACA,6BACA,6BACA,8BAEH,CACG,6BACA,6BACA,6BACA,8BAEH,CACG,6BACA,6BACA,6BACA,8BAEH,CACG,6BACA,6BACA,6BACA,4BAEH,CACG,6BACA,6BACA,6BACA,8BAEH,CACG,6BACA,6BACA,6BACA,8BAEH,CACG,2BACA,6BACA,6BACA,6BAEH,CACG,6BACA,6BACA,6BACA,8BAEH,CACG,6BACA,6BACA,6BACA,8BAEH,CACG,6BACA,6BACA,6BACA,8BAEH,CACG,6BACA,6BACA,6BACA,8BAEH,CACG,2BACA,6BACA,6BACA,8BAEH,CACG,6BACA,6BACA,6BACA,8BAEH,CACG,6BACA,6BACA,4BACA,6BAEH,CACG,6BACA,6BACA,6BACA,8BAEH,CACG,0BACA,4BACA,4BACA,8BAEH,CACG,4BACA,6BACA,6BACA,8BAEH,CACG,6BACA,6BACA,6BACA,8BAEH,CACG,6BACA,6BACA,6BACA,8BAEH,CACG,6BACA,6BACA,6BACA,8BAEH,CACG,6BACA,6BACA,6BACA,8BAEH,CACG,6BACA,6BACA,6BACA,8BAEH,CACG,6BACA,6BACA,4BACA,6BAEH,CACG,6BACA,6BACA,6BACA,8BAEH,CACG,6BACA,6BACA,6BACA,8BAEH,CACG,6BACA,6BACA,6BACA,8BAEH,CACG,4BACA,4BACA,4BACA,8BAEH,CACG,6BACA,6BACA,6BACA,4BAEH,CACG,4BACA,6BACA,6BACA,8BAEH,CACG,6BACA,6BACA,6BACA,8BAEH,CACG,4BACA,6BACA,6BACA,8BAEH,CACG,6BACA,6BACA,6BACA,8BAEH,CACG,4BACA,6BACA,6BACA","sources":["src/watercolor/index.ts","src/watercolor/sketch.ts"],"names":["_p","require","_sketch","p5","sketch","state","setup","draw","updateState","document","getElementById","createCanvas","X_DIM","Y_DIM","noLoop","translate","background","noStroke","colorScheme","COLOR_SCHEMES","Math","floor","random","length","i","c","layoutInfo","LAYOUT","fill","push","translateX","translateY","rotate","points","generatePoints","s","sublayerPoints","j","polygonDeformation","beginShape","point","vertex","x","y","endShape","CLOSE","pop","newPoints","a","b","createVector","heading","variance","PI","gaussianShift","randomGaussian","bPerp","shiftedB","Vector","add","mult","window","innerWidth","innerHeight","angle","cos","sin"],"version":3,"file":"watercolor.a662f9f0.js.map","sourcesContent":["import p5 from \"p5\";\n\nimport { setup, updateState, draw, State } from \"./sketch\";\n\nnew p5((sketch) => {\n  let state: State;\n\n  sketch.setup = () => {\n    state = setup(sketch);\n    state.p5 = sketch;\n  };\n\n  sketch.draw = () => {\n    state = updateState(state);\n    draw(sketch, state);\n  };\n}, document.getElementById(\"p5canvas\")!);\n","import p5 from \"p5\";\n\nexport interface State {\n  p5: p5;\n}\n\n/* Polygon Deformation Technique\n * For each line in the polygon, find the midpoint. Add a new point from a Gaussian distribution centered on that point.\n */\nconst GAUSSIAN_SD = 0.4;\nfunction polygonDeformation(sketch: p5, points: p5.Vector[]): p5.Vector[] {\n  let newPoints = [];\n  for (let i = 0; i < points.length; i++) {\n    // Pick our points, being sure to loop around correctly...\n    const a = points[i];\n    const c = i === points.length - 1 ? points[0] : points[i + 1];\n\n    // The midpoint is a basic average of the two points\n    const b = sketch.createVector((a.x + c.x) / 2, (a.y + c.y) / 2);\n    const heading = b.heading();\n\n    // Dynamic variance based on heading\n    let variance = GAUSSIAN_SD;\n    if (heading > -Math.PI / 4 && heading < Math.PI / 2) {\n      variance += 0.08;\n    } else if (heading > (3 * Math.PI) / 4) {\n      variance -= 0.04;\n    } else if (heading < -Math.PI / 2) {\n      variance += 0.04;\n    }\n\n    const gaussianShift = sketch.randomGaussian(0, variance);\n\n    // Calculate a perpendicular vector\n    let bPerp = sketch.createVector(-(c.y - a.y), c.x - a.x);\n    const shiftedB = p5.Vector.add(b, bPerp.mult(gaussianShift));\n\n    newPoints.push(a);\n    newPoints.push(shiftedB);\n  }\n\n  return newPoints;\n}\n\nconst X_DIM = window.innerWidth;\nconst Y_DIM = window.innerHeight - 4;\n\nconst N_SIDES = 10;\nconst RADIUS = 200;\nconst BASE_DEFORMATIONS = 5;\n\nfunction generatePoints(sketch: p5) {\n  let points: p5.Vector[] = [];\n  for (let i = 0; i < N_SIDES; i++) {\n    const angle = Math.PI * 2 * (i / N_SIDES);\n    points.push(\n      sketch.createVector(RADIUS * Math.cos(angle), RADIUS * Math.sin(angle))\n    );\n  }\n  for (let i = 0; i < BASE_DEFORMATIONS; i++) {\n    points = polygonDeformation(sketch, points);\n  }\n  return points;\n}\n\nexport function setup(sketch: p5): State {\n  sketch.createCanvas(X_DIM, Y_DIM);\n  sketch.noLoop();\n\n  return { p5: sketch };\n}\n\nexport function updateState(state: State): State {\n  return {\n    ...state,\n  };\n}\n\nconst LAYER_COUNT = 45;\nconst LAYER_OPACITY = 0.04;\nconst LAYER_DEFORMATIONS = 6;\n\ninterface LayoutInfo {\n  points?: p5.Vector[];\n  translateX?: number;\n  translateY?: number;\n  rotate?: number;\n}\n\nconst SUBLAYER_COUNT = 5;\nconst LAYOUT: LayoutInfo[] = [\n  {\n    translateX: -100,\n    translateY: -100,\n    rotate: Math.PI / 2,\n  },\n  {\n    translateX: 100,\n    translateY: -100,\n    rotate: -Math.PI / 2,\n  },\n  {\n    translateX: -100,\n    translateY: 100,\n    rotate: Math.PI,\n  },\n  {\n    translateX: 100,\n    translateY: 100,\n    rotate: 0,\n  },\n];\n\nexport function draw(sketch: p5, state: State) {\n  // Move center to 0, 0\n  sketch.translate(X_DIM / 2, Y_DIM / 2);\n  sketch.background(250, 245, 235);\n\n  sketch.noStroke();\n\n  const colorScheme =\n    COLOR_SCHEMES[Math.floor(sketch.random(COLOR_SCHEMES.length))];\n\n  for (let i = 0; i < LAYER_COUNT; i += SUBLAYER_COUNT) {\n    for (let c = 0; c < 4; c++) {\n      const layoutInfo = LAYOUT[c];\n      sketch.fill(colorScheme[c]);\n\n      sketch.push();\n      if (layoutInfo.translateX && layoutInfo.translateY) {\n        sketch.translate(layoutInfo.translateX, layoutInfo.translateY);\n      }\n      if (layoutInfo.rotate) {\n        sketch.rotate(layoutInfo.rotate);\n      }\n\n      const points = (layoutInfo.points =\n        layoutInfo.points || generatePoints(sketch));\n\n      for (let s = 0; s < SUBLAYER_COUNT; s++) {\n        let sublayerPoints = points;\n        for (let j = 0; j < LAYER_DEFORMATIONS; j++) {\n          sublayerPoints = polygonDeformation(sketch, points);\n        }\n        sketch.beginShape();\n        for (const point of sublayerPoints) {\n          sketch.vertex(point.x, point.y);\n        }\n        sketch.endShape(sketch.CLOSE);\n      }\n      sketch.pop();\n    }\n  }\n\n  return state;\n}\n\nconst COLOR_SCHEMES = [\n  [\n    `rgba(139,  205, 205, ${LAYER_OPACITY})`,\n    `rgba(229,  237, 183, ${LAYER_OPACITY})`,\n    `rgba(250,  240, 175, ${LAYER_OPACITY})`,\n    `rgba(241,  197, 197, ${LAYER_OPACITY})`,\n  ],\n  [\n    `rgba(212,  181, 176, ${LAYER_OPACITY})`,\n    `rgba(238,  218, 209, ${LAYER_OPACITY})`,\n    `rgba(246,  158, 123, ${LAYER_OPACITY})`,\n    `rgba(56,  62, 86, ${LAYER_OPACITY})`,\n  ],\n  [\n    `rgba(227,  99, 135, ${LAYER_OPACITY})`,\n    `rgba(242,  170, 170, ${LAYER_OPACITY})`,\n    `rgba(166,  220, 239, ${LAYER_OPACITY})`,\n    `rgba(221,  243, 245, ${LAYER_OPACITY})`,\n  ],\n  [\n    `rgba(246,  222, 246, ${LAYER_OPACITY})`,\n    `rgba(229,  207, 229, ${LAYER_OPACITY})`,\n    `rgba(207,  229, 207, ${LAYER_OPACITY})`,\n    `rgba(207,  246, 207, ${LAYER_OPACITY})`,\n  ],\n  [\n    `rgba(244,  235, 193, ${LAYER_OPACITY})`,\n    `rgba(160,  193, 184, ${LAYER_OPACITY})`,\n    `rgba(112,  159, 176, ${LAYER_OPACITY})`,\n    `rgba(114,  106, 149, ${LAYER_OPACITY})`,\n  ],\n  [\n    `rgba(170,  205, 190, ${LAYER_OPACITY})`,\n    `rgba(244,  247, 197, ${LAYER_OPACITY})`,\n    `rgba(251,  198, 135, ${LAYER_OPACITY})`,\n    `rgba(234,  144, 122, ${LAYER_OPACITY})`,\n  ],\n  [\n    `rgba(171,  194, 232, ${LAYER_OPACITY})`,\n    `rgba(219,  198, 235, ${LAYER_OPACITY})`,\n    `rgba(209,  234, 163, ${LAYER_OPACITY})`,\n    `rgba(239,  238, 157, ${LAYER_OPACITY})`,\n  ],\n  [\n    `rgba(103,  155, 155, ${LAYER_OPACITY})`,\n    `rgba(170,  207, 207, ${LAYER_OPACITY})`,\n    `rgba(210,  145, 188, ${LAYER_OPACITY})`,\n    `rgba(255,  203, 203, ${LAYER_OPACITY})`,\n  ],\n  [\n    `rgba(245,  167, 167, ${LAYER_OPACITY})`,\n    `rgba(249,  216, 156, ${LAYER_OPACITY})`,\n    `rgba(130,  196, 195, ${LAYER_OPACITY})`,\n    `rgba(188,  101, 141, ${LAYER_OPACITY})`,\n  ],\n  [\n    `rgba(225,  153, 153, ${LAYER_OPACITY})`,\n    `rgba(245,  168, 168, ${LAYER_OPACITY})`,\n    `rgba(250,  183, 183, ${LAYER_OPACITY})`,\n    `rgba(221,  221, 221, ${LAYER_OPACITY})`,\n  ],\n  [\n    `rgba(250,  242, 242, ${LAYER_OPACITY})`,\n    `rgba(243,  225, 225, ${LAYER_OPACITY})`,\n    `rgba(241,  209, 209, ${LAYER_OPACITY})`,\n    `rgba(125,  90, 90, ${LAYER_OPACITY})`,\n  ],\n  [\n    `rgba(104,  134, 197, ${LAYER_OPACITY})`,\n    `rgba(255,  172, 183, ${LAYER_OPACITY})`,\n    `rgba(255,  224, 172, ${LAYER_OPACITY})`,\n    `rgba(249,  249, 249, ${LAYER_OPACITY})`,\n  ],\n  [\n    `rgba(255,  236, 199, ${LAYER_OPACITY})`,\n    `rgba(253,  217, 152, ${LAYER_OPACITY})`,\n    `rgba(245,  185, 113, ${LAYER_OPACITY})`,\n    `rgba(133,  163, 146, ${LAYER_OPACITY})`,\n  ],\n  [\n    `rgba(216,  52, 95, ${LAYER_OPACITY})`,\n    `rgba(229,  138, 138, ${LAYER_OPACITY})`,\n    `rgba(204,  175, 175, ${LAYER_OPACITY})`,\n    `rgba(88,  141, 168, ${LAYER_OPACITY})`,\n  ],\n  [\n    `rgba(103,  155, 155, ${LAYER_OPACITY})`,\n    `rgba(170,  207, 207, ${LAYER_OPACITY})`,\n    `rgba(253,  226, 226, ${LAYER_OPACITY})`,\n    `rgba(255,  182, 182, ${LAYER_OPACITY})`,\n  ],\n  [\n    `rgba(255,  235, 153, ${LAYER_OPACITY})`,\n    `rgba(164,  197, 198, ${LAYER_OPACITY})`,\n    `rgba(212,  235, 208, ${LAYER_OPACITY})`,\n    `rgba(133,  108, 139, ${LAYER_OPACITY})`,\n  ],\n  [\n    `rgba(241,  146, 146, ${LAYER_OPACITY})`,\n    `rgba(203,  226, 176, ${LAYER_OPACITY})`,\n    `rgba(252,  247, 187, ${LAYER_OPACITY})`,\n    `rgba(246,  209, 134, ${LAYER_OPACITY})`,\n  ],\n  [\n    `rgba(243,  236, 184, ${LAYER_OPACITY})`,\n    `rgba(245,  202, 179, ${LAYER_OPACITY})`,\n    `rgba(168,  211, 218, ${LAYER_OPACITY})`,\n    `rgba(181,  144, 202, ${LAYER_OPACITY})`,\n  ],\n  [\n    `rgba(66,  72, 116, ${LAYER_OPACITY})`,\n    `rgba(166,  177, 225, ${LAYER_OPACITY})`,\n    `rgba(220,  214, 247, ${LAYER_OPACITY})`,\n    `rgba(244,  238, 255, ${LAYER_OPACITY})`,\n  ],\n  [\n    `rgba(255,  170, 165, ${LAYER_OPACITY})`,\n    `rgba(255,  211, 182, ${LAYER_OPACITY})`,\n    `rgba(220,  237, 193, ${LAYER_OPACITY})`,\n    `rgba(168,  230, 207, ${LAYER_OPACITY})`,\n  ],\n  [\n    `rgba(233,  225, 204, ${LAYER_OPACITY})`,\n    `rgba(234,  144, 133, ${LAYER_OPACITY})`,\n    `rgba(212,  80, 121, ${LAYER_OPACITY})`,\n    `rgba(110,  87, 115, ${LAYER_OPACITY})`,\n  ],\n  [\n    `rgba(246,  238, 199, ${LAYER_OPACITY})`,\n    `rgba(255,  182, 185, ${LAYER_OPACITY})`,\n    `rgba(244,  218, 218, ${LAYER_OPACITY})`,\n    `rgba(190,  235, 233, ${LAYER_OPACITY})`,\n  ],\n  [\n    `rgba(48,  71, 94, ${LAYER_OPACITY})`,\n    `rgba(186,  107, 87, ${LAYER_OPACITY})`,\n    `rgba(241,  147, 92, ${LAYER_OPACITY})`,\n    `rgba(231,  178, 165, ${LAYER_OPACITY})`,\n  ],\n  [\n    `rgba(108,  86, 123, ${LAYER_OPACITY})`,\n    `rgba(192,  108, 132, ${LAYER_OPACITY})`,\n    `rgba(246,  114, 128, ${LAYER_OPACITY})`,\n    `rgba(248,  177, 149, ${LAYER_OPACITY})`,\n  ],\n  [\n    `rgba(129,  245, 255, ${LAYER_OPACITY})`,\n    `rgba(160,  255, 230, ${LAYER_OPACITY})`,\n    `rgba(255,  255, 221, ${LAYER_OPACITY})`,\n    `rgba(255,  213, 229, ${LAYER_OPACITY})`,\n  ],\n  [\n    `rgba(254,  179, 119, ${LAYER_OPACITY})`,\n    `rgba(247,  232, 240, ${LAYER_OPACITY})`,\n    `rgba(241,  198, 222, ${LAYER_OPACITY})`,\n    `rgba(234,  176, 217, ${LAYER_OPACITY})`,\n  ],\n  [\n    `rgba(194,  149, 216, ${LAYER_OPACITY})`,\n    `rgba(228,  163, 212, ${LAYER_OPACITY})`,\n    `rgba(241,  198, 211, ${LAYER_OPACITY})`,\n    `rgba(252,  226, 219, ${LAYER_OPACITY})`,\n  ],\n  [\n    `rgba(106,  140, 175, ${LAYER_OPACITY})`,\n    `rgba(117,  183, 158, ${LAYER_OPACITY})`,\n    `rgba(167,  233, 175, ${LAYER_OPACITY})`,\n    `rgba(238,  249, 191, ${LAYER_OPACITY})`,\n  ],\n  [\n    `rgba(185,  204, 237, ${LAYER_OPACITY})`,\n    `rgba(246,  231, 230, ${LAYER_OPACITY})`,\n    `rgba(251,  244, 249, ${LAYER_OPACITY})`,\n    `rgba(246,  229, 245, ${LAYER_OPACITY})`,\n  ],\n  [\n    `rgba(233,  226, 208, ${LAYER_OPACITY})`,\n    `rgba(234,  144, 133, ${LAYER_OPACITY})`,\n    `rgba(212,  93, 121, ${LAYER_OPACITY})`,\n    `rgba(110,  87, 115, ${LAYER_OPACITY})`,\n  ],\n  [\n    `rgba(248,  195, 175, ${LAYER_OPACITY})`,\n    `rgba(254,  165, 173, ${LAYER_OPACITY})`,\n    `rgba(234,  154, 187, ${LAYER_OPACITY})`,\n    `rgba(190,  138, 191, ${LAYER_OPACITY})`,\n  ],\n  [\n    `rgba(138,  198, 209, ${LAYER_OPACITY})`,\n    `rgba(187,  222, 214, ${LAYER_OPACITY})`,\n    `rgba(250,  227, 217, ${LAYER_OPACITY})`,\n    `rgba(255,  182, 185, ${LAYER_OPACITY})`,\n  ],\n  [\n    `rgba(241,  241, 246, ${LAYER_OPACITY})`,\n    `rgba(225,  204, 236, ${LAYER_OPACITY})`,\n    `rgba(201,  182, 228, ${LAYER_OPACITY})`,\n    `rgba(190,  159, 225, ${LAYER_OPACITY})`,\n  ],\n  [\n    `rgba(201,  117, 61, ${LAYER_OPACITY})`,\n    `rgba(235,  130, 66, ${LAYER_OPACITY})`,\n    `rgba(230,  161, 87, ${LAYER_OPACITY})`,\n    `rgba(157,  171, 134, ${LAYER_OPACITY})`,\n  ],\n  [\n    `rgba(245,  205, 170, ${LAYER_OPACITY})`,\n    `rgba(207,  180, 149, ${LAYER_OPACITY})`,\n    `rgba(117,  129, 132, ${LAYER_OPACITY})`,\n    `rgba(93,  91, 106, ${LAYER_OPACITY})`,\n  ],\n  [\n    `rgba(50,  175, 169, ${LAYER_OPACITY})`,\n    `rgba(164,  212, 174, ${LAYER_OPACITY})`,\n    `rgba(231,  240, 195, ${LAYER_OPACITY})`,\n    `rgba(240,  207, 133, ${LAYER_OPACITY})`,\n  ],\n  [\n    `rgba(229,  228, 204, ${LAYER_OPACITY})`,\n    `rgba(186,  199, 167, ${LAYER_OPACITY})`,\n    `rgba(136,  158, 129, ${LAYER_OPACITY})`,\n    `rgba(105,  132, 116, ${LAYER_OPACITY})`,\n  ],\n  [\n    `rgba(108,  86, 123, ${LAYER_OPACITY})`,\n    `rgba(192,  108, 132, ${LAYER_OPACITY})`,\n    `rgba(246,  114, 128, ${LAYER_OPACITY})`,\n    `rgba(248,  177, 149, ${LAYER_OPACITY})`,\n  ],\n  [\n    `rgba(214,  229, 250, ${LAYER_OPACITY})`,\n    `rgba(254,  246, 251, ${LAYER_OPACITY})`,\n    `rgba(230,  178, 198, ${LAYER_OPACITY})`,\n    `rgba(215,  127, 161, ${LAYER_OPACITY})`,\n  ],\n  [\n    `rgba(150,  86, 161, ${LAYER_OPACITY})`,\n    `rgba(194,  176, 201, ${LAYER_OPACITY})`,\n    `rgba(204,  204, 204, ${LAYER_OPACITY})`,\n    `rgba(244,  239, 211, ${LAYER_OPACITY})`,\n  ],\n];\n"]}