{"mappings":"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","sources":["src/flashing/index.ts"],"names":["async","img","document","getElementById","sgif","window","SuperGif","gif","loaded","gifFrames","load","console","log","get_length","stream","navigator","mediaDevices","getUserMedia","audio","video","getAccess","context","AudioContext","sampleRate","source","createMediaStreamSource","processor","createScriptProcessor","connect","destination","ws","WebSocket","recoveryMode","onaudioprocess","e","data","send","String","Math","floor","performance","now","buffer","onAudioData","inputBuffer","getChannelData","onerror","onclose","app","app2","bpm","beatTags","frames","beats","intensityToHSL","intensity","onclick","maxA","onmessage","event","left","right","split","RTT","Number","JSON","parse","style","backgroundColor","a","max","min","gifPos","innerText","get_current_frame","move_to","width","height","main"],"version":3,"file":"flashing.2b9e21eb.js.map","sourcesContent":["async function getAccess() {\n  return await navigator.mediaDevices.getUserMedia({\n    audio: true,\n    video: false,\n  });\n}\n\nfunction onAudioData(ws: WebSocket, data: Float32Array) {\n  // console.log(\"Sending data\", data);\n  ws.send(String(Math.floor(performance.now())));\n  ws.send(data.buffer);\n}\n\nasync function main() {\n  const img = document.getElementById(\"gif\");\n  const sgif = new window.SuperGif({ gif: img });\n  let loaded = false;\n  let gifFrames = 0;\n  sgif.load(() => {\n    console.log(\"Frames: \", sgif.get_length());\n    gifFrames = sgif.get_length();\n    loaded = true;\n  });\n\n  const stream = await getAccess();\n  console.log(stream);\n\n  // 44100 is madmom default\n  const context = new AudioContext({ sampleRate: 44100 });\n  const source = context.createMediaStreamSource(stream);\n\n  // 2048 = frame_size ?\n  // madmom expects this to be = hop_size = 441 OOF\n  const processor = context.createScriptProcessor(1024, 1, 1);\n  processor.connect(context.destination);\n\n  source.connect(processor);\n\n  const ws = new WebSocket(\"ws://192.168.1.249:9001\");\n  let recoveryMode = 0;\n\n  processor.onaudioprocess = (e: AudioProcessingEvent) => {\n    if (recoveryMode > 0) {\n      recoveryMode -= 1;\n      return;\n    }\n    onAudioData(ws, e.inputBuffer.getChannelData(0));\n  };\n\n  ws.onerror = ws.onclose = () => {\n    processor.onaudioprocess = null;\n  };\n\n  const app = document.getElementById(\"app\")!;\n  const app2 = document.getElementById(\"app2\")!;\n  const bpm = document.getElementById(\"bpm\")!;\n\n  const beatTags = [\n    document.getElementById(\"beat1\")!,\n    document.getElementById(\"beat2\")!,\n    document.getElementById(\"beat3\")!,\n    document.getElementById(\"beat4\")!,\n  ];\n\n  let frames = 0;\n  let beats = 0;\n\n  window.onclick = () => {\n    beats = 3;\n  };\n\n  function intensityToHSL(intensity: number): string {\n    return `hsl(240, 100%, ${Math.floor(100 - intensity / 2)}%)`;\n  }\n\n  let maxA = 0;\n\n  ws.onmessage = (event) => {\n    frames += 1;\n\n    let [left, right] = event.data.split(\"|\");\n    if (frames % 5 === 0) {\n      const RTT = Math.floor(performance.now()) - Number(left);\n      console.log(\"RTT\", RTT);\n      if (RTT > 500) {\n        recoveryMode = 10;\n      }\n      if (RTT < 100) {\n        recoveryMode = 0;\n      }\n    }\n    // console.log(JSON.parse(right));\n    const data = JSON.parse(right);\n\n    if (data[\"b\"]) {\n      beats = (beats + 1) % 4;\n    }\n\n    if (data[\"b\"]) {\n      beatTags[beats].style.backgroundColor = app.style.backgroundColor =\n        \"#0000FF\";\n      maxA = 0;\n    } else if (data[\"b2\"]) {\n      const a = Math.max(Math.min(data[\"a\"], 10), 0) * 10;\n      beatTags[\n        beats\n      ].style.backgroundColor = app.style.backgroundColor = intensityToHSL(a);\n    } else {\n      beatTags[beats].style.backgroundColor = \"#EAEAEA\";\n      app.style.backgroundColor = \"#FFFFFF\";\n    }\n    maxA = Math.max(maxA, data[\"a\"]);\n    beatTags[beats].innerText = String(maxA);\n\n    if (data[\"p\"] > 90) {\n      beatTags[(beats + 1) % 4].style.backgroundColor = intensityToHSL(\n        data[\"p\"] / 2\n      );\n    }\n\n    let gifPos;\n    if (data[\"b\"] && beats % 2 === 0) {\n      gifPos = 0;\n    } else {\n      gifPos = Math.floor(\n        // (((beats % 2) * 50 + data[\"p\"] / 2) / 100) * gifFrames\n        (data[\"p\"] / 100) * gifFrames\n      );\n    }\n    if (loaded && sgif.get_current_frame() != gifPos) {\n      sgif.move_to(gifPos);\n    }\n\n    // app2.style.width = `${Math.floor(data[\"p\"] * 4)}px`;\n    app2.style.backgroundColor = `hsl(${\n      Math.floor(240 + beats * 90 + (data[\"p\"] * 90) / 100) % 360\n    }, 100%, 50%)`; //${Math.floor(100 - data[\"p\"] / 2)}%`;\n\n    bpm.innerText = data[\"t\"];\n  };\n\n  // app.style.width = \"100vw\";\n  // app.style.height = \"100vh\";\n  app.style.width = \"400px\";\n  app.style.height = \"400px\";\n  app.style.backgroundColor = \"#FFFFFF\";\n\n  app2.style.width = \"400px\";\n  app2.style.height = \"100px\";\n  app2.style.backgroundColor = \"#FFFFFF\";\n}\n\nmain();\n"]}