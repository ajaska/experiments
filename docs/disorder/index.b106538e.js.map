{"mappings":"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","sources":["./src/disorder/index.ts","./node_modules/immer/dist/index.js","./node_modules/immer/dist/immer.cjs.production.min.js","./src/disorder/sketch.ts"],"sourcesContent":["import p5 from \"p5\";\nimport produce from \"immer\";\n\nimport { setup, updateState, draw, State } from \"./sketch\";\n\nnew p5((sketch) => {\n  let state: State;\n\n  sketch.setup = () => {\n    state = setup(sketch);\n    state.p5 = sketch;\n  };\n\n  sketch.draw = () => {\n    state = produce(state, updateState);\n    draw(sketch, state);\n  };\n}, document.getElementById(\"p5canvas\")!);\n","\n'use strict'\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('./immer.cjs.production.min.js')\n} else {\n  module.exports = require('./immer.cjs.development.js')\n}\n","function t(t){for(var n=arguments.length,r=Array(n>1?n-1:0),e=1;e<n;e++)r[e-1]=arguments[e];throw Error(\"[Immer] minified error nr: \"+t+(r.length?\" \"+r.join(\",\"):\"\")+\". Find the full error at: https://bit.ly/3cXEKWf\")}function n(t){return!!t&&!!t[G]}function r(t){return!!t&&(function(t){if(!t||\"object\"!=typeof t)return!1;var n=Object.getPrototypeOf(t);return!n||n===Object.prototype}(t)||Array.isArray(t)||!!t[B]||!!t.constructor[B]||c(t)||s(t))}function e(t,n,r){void 0===r&&(r=!1),0===i(t)?(r?Object.keys:L)(t).forEach((function(e){r&&\"symbol\"==typeof e||n(e,t[e],t)})):t.forEach((function(r,e){return n(e,r,t)}))}function i(t){var n=t[G];return n?n.t>3?n.t-4:n.t:Array.isArray(t)?1:c(t)?2:s(t)?3:0}function u(t,n){return 2===i(t)?t.has(n):Object.prototype.hasOwnProperty.call(t,n)}function o(t,n){return 2===i(t)?t.get(n):t[n]}function f(t,n,r){var e=i(t);2===e?t.set(n,r):3===e?(t.delete(n),t.add(r)):t[n]=r}function a(t,n){return t===n?0!==t||1/t==1/n:t!=t&&n!=n}function c(t){return N&&t instanceof Map}function s(t){return W&&t instanceof Set}function v(t){return t.i||t.u}function p(t){if(Array.isArray(t))return t.slice();var n=Q(t);delete n[G];for(var r=L(n),e=0;e<r.length;e++){var i=r[e],u=n[i];!1===u.writable&&(u.writable=!0,u.configurable=!0),(u.get||u.set)&&(n[i]={configurable:!0,writable:!0,enumerable:u.enumerable,value:t[i]})}return Object.create(Object.getPrototypeOf(t),n)}function l(t,u){d(t)||n(t)||!r(t)||(i(t)>1&&(t.set=t.add=t.clear=t.delete=h),Object.freeze(t),u&&e(t,(function(t,n){return l(n,!0)}),!0))}function h(){t(2)}function d(t){return null==t||\"object\"!=typeof t||Object.isFrozen(t)}function y(n){var r=T[n];return r||t(19,n),r}function _(t,n){T[t]=n}function b(){return I}function m(t,n){n&&(y(\"Patches\"),t.o=[],t.s=[],t.v=n)}function j(t){O(t),t.p.forEach(w),t.p=null}function O(t){t===I&&(I=t.l)}function x(t){return I={p:[],l:I,h:t,_:!0,m:0}}function w(t){var n=t[G];0===n.t||1===n.t?n.j():n.O=!0}function S(n,e){e.m=e.p.length;var i=e.p[0],u=void 0!==n&&n!==i;return e.h.S||y(\"ES5\").M(e,n,u),u?(i[G].P&&(j(e),t(4)),r(n)&&(n=M(e,n),e.l||g(e,n)),e.o&&y(\"Patches\").g(i[G],n,e.o,e.s)):n=M(e,i,[]),j(e),e.o&&e.v(e.o,e.s),n!==q?n:void 0}function M(t,n,r){if(d(n))return n;var i=n[G];if(!i)return e(n,(function(e,u){return P(t,i,n,e,u,r)}),!0),n;if(i.A!==t)return n;if(!i.P)return g(t,i.u,!0),i.u;if(!i.R){i.R=!0,i.A.m--;var u=4===i.t||5===i.t?i.i=p(i.k):i.i;e(u,(function(n,e){return P(t,i,u,n,e,r)})),g(t,u,!1),r&&t.o&&y(\"Patches\").F(i,r,t.o,t.s)}return i.i}function P(t,e,i,o,a,c){if(n(a)){var s=M(t,a,c&&e&&3!==e.t&&!u(e.D,o)?c.concat(o):void 0);if(f(i,o,s),!n(s))return;t._=!1}if(r(a)&&!d(a)){if(!t.h.K&&t.m<1)return;M(t,a),e&&e.A.l||g(t,a)}}function g(t,n,r){void 0===r&&(r=!1),t.h.K&&t._&&l(n,r)}function A(t,n){var r=t[G];return(r?v(r):t)[n]}function z(t){t.P||(t.P=!0,t.l&&z(t.l))}function E(t){t.i||(t.i=p(t.u))}function R(t,n,r){var e=c(n)?y(\"MapSet\").$(n,r):s(n)?y(\"MapSet\").C(n,r):t.S?function(t,n){var r=Array.isArray(t),e={t:r?1:0,A:n?n.A:b(),P:!1,R:!1,D:{},l:n,u:t,k:null,i:null,j:null,I:!1},i=e,u=U;r&&(i=[e],u=V);var o=Proxy.revocable(i,u),f=o.revoke,a=o.proxy;return e.k=a,e.j=f,a}(n,r):y(\"ES5\").J(n,r);return(r?r.A:b()).p.push(e),e}function k(u){return n(u)||t(22,u),function t(n){if(!r(n))return n;var u,a=n[G],c=i(n);if(a){if(!a.P&&(a.t<4||!y(\"ES5\").N(a)))return a.u;a.R=!0,u=F(n,c),a.R=!1}else u=F(n,c);return e(u,(function(n,r){a&&o(a.u,n)===r||f(u,n,t(r))})),3===c?new Set(u):u}(u)}function F(t,n){switch(n){case 2:return new Map(t);case 3:return Array.from(t)}return p(t)}function D(){function t(t,n){var r=f[t];return r?r.enumerable=n:f[t]=r={configurable:!0,enumerable:n,get:function(){return U.get(this[G],t)},set:function(n){U.set(this[G],t,n)}},r}function r(t){for(var n=t.length-1;n>=0;n--){var r=t[n][G];if(!r.P)switch(r.t){case 5:o(r)&&z(r);break;case 4:i(r)&&z(r)}}}function i(t){for(var n=t.u,r=t.k,e=L(r),i=e.length-1;i>=0;i--){var o=e[i];if(o!==G){var f=n[o];if(void 0===f&&!u(n,o))return!0;var c=r[o],s=c&&c[G];if(s?s.u!==f:!a(c,f))return!0}}var v=!!n[G];return e.length!==L(n).length+(v?0:1)}function o(t){var n=t.k;if(n.length!==t.u.length)return!0;var r=Object.getOwnPropertyDescriptor(n,n.length-1);return!(!r||r.get)}var f={};_(\"ES5\",{J:function(n,r){var e=Array.isArray(n),i=function(n,r){var e=Q(r);n&&delete e.length,delete e[G];for(var i=L(e),u=0;u<i.length;u++){var o=i[u];e[o]=t(o,n||!!e[o].enumerable)}if(n){var f=Array(r.length);return Object.defineProperties(f,e),f}return Object.create(Object.getPrototypeOf(r),e)}(e,n),u={t:e?5:4,A:r?r.A:b(),P:!1,R:!1,D:{},l:r,u:n,k:i,i:null,O:!1,I:!1};return Object.defineProperty(i,G,{value:u,writable:!0}),i},M:function(t,i,f){f?n(i)&&i[G].A===t&&r(t.p):(t.o&&function t(n){if(n&&\"object\"==typeof n){var r=n[G];if(r){var i=r.u,f=r.k,a=r.D,c=r.t;if(4===c)e(f,(function(n){n!==G&&(void 0!==i[n]||u(i,n)?a[n]||t(f[n]):(a[n]=!0,z(r)))})),e(i,(function(t){void 0!==f[t]||u(f,t)||(a[t]=!1,z(r))}));else if(5===c){if(o(r)&&(z(r),a.length=!0),f.length<i.length)for(var s=f.length;s<i.length;s++)a[s]=!1;else for(var v=i.length;v<f.length;v++)a[v]=!0;for(var p=Math.min(f.length,i.length),l=0;l<p;l++)void 0===a[l]&&t(f[l])}}}}(t.p[0]),r(t.p))},N:function(t){return 4===t.t?i(t):o(t)}})}function K(){function r(t){if(!t||\"object\"!=typeof t)return t;if(Array.isArray(t))return t.map(r);if(c(t))return new Map(Array.from(t.entries()).map((function(t){return[t[0],r(t[1])]})));if(s(t))return new Set(Array.from(t).map(r));var n=Object.create(Object.getPrototypeOf(t));for(var e in t)n[e]=r(t[e]);return n}function f(t){return n(t)?r(t):t}var a=\"add\";_(\"Patches\",{W:function(n,e){return e.forEach((function(e){for(var u=e.path,f=e.op,c=n,s=0;s<u.length-1;s++)\"object\"!=typeof(c=o(c,u[s]))&&t(15,u.join(\"/\"));var v=i(c),p=r(e.value),l=u[u.length-1];switch(f){case\"replace\":switch(v){case 2:return c.set(l,p);case 3:t(16);default:return c[l]=p}case a:switch(v){case 1:return c.splice(l,0,p);case 2:return c.set(l,p);case 3:return c.add(p);default:return c[l]=p}case\"remove\":switch(v){case 1:return c.splice(l,1);case 2:return c.delete(l);case 3:return c.delete(e.value);default:return delete c[l]}default:t(17,f)}})),n},F:function(t,n,r,i){switch(t.t){case 0:case 4:case 2:return function(t,n,r,i){var c=t.u,s=t.i;e(t.D,(function(t,e){var v=o(c,t),p=o(s,t),l=e?u(c,t)?\"replace\":a:\"remove\";if(v!==p||\"replace\"!==l){var h=n.concat(t);r.push(\"remove\"===l?{op:l,path:h}:{op:l,path:h,value:p}),i.push(l===a?{op:\"remove\",path:h}:\"remove\"===l?{op:a,path:h,value:f(v)}:{op:\"replace\",path:h,value:f(v)})}}))}(t,n,r,i);case 5:case 1:return function(t,n,r,e){var i=t.u,u=t.D,o=t.i;if(o.length<i.length){var c=[o,i];i=c[0],o=c[1];var s=[e,r];r=s[0],e=s[1]}for(var v=0;v<i.length;v++)if(u[v]&&o[v]!==i[v]){var p=n.concat([v]);r.push({op:\"replace\",path:p,value:f(o[v])}),e.push({op:\"replace\",path:p,value:f(i[v])})}for(var l=i.length;l<o.length;l++){var h=n.concat([l]);r.push({op:a,path:h,value:f(o[l])})}i.length<o.length&&e.push({op:\"replace\",path:n.concat([\"length\"]),value:i.length})}(t,n,r,i);case 3:return function(t,n,r,e){var i=t.u,u=t.i,o=0;i.forEach((function(t){if(!u.has(t)){var i=n.concat([o]);r.push({op:\"remove\",path:i,value:t}),e.unshift({op:a,path:i,value:t})}o++})),o=0,u.forEach((function(t){if(!i.has(t)){var u=n.concat([o]);r.push({op:a,path:u,value:t}),e.unshift({op:\"remove\",path:u,value:t})}o++}))}(t,n,r,i)}},g:function(t,n,r,e){r.push({op:\"replace\",path:[],value:n}),e.push({op:\"replace\",path:[],value:t.u})}})}function $(){function n(t,n){function r(){this.constructor=t}o(t,n),t.prototype=(r.prototype=n.prototype,new r)}function e(t){t.i||(t.D=new Map,t.i=new Map(t.u))}function i(t){t.i||(t.i=new Set,t.u.forEach((function(n){if(r(n)){var e=R(t.A.h,n,t);t.p.set(n,e),t.i.add(e)}else t.i.add(n)})))}function u(n){n.O&&t(3,JSON.stringify(v(n)))}var o=function(t,n){return(o=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,n){t.__proto__=n}||function(t,n){for(var r in n)n.hasOwnProperty(r)&&(t[r]=n[r])})(t,n)},f=function(){function t(t,n){return this[G]={t:2,l:n,A:n?n.A:b(),P:!1,R:!1,i:void 0,D:void 0,u:t,k:this,I:!1,O:!1},this}n(t,Map);var i=t.prototype;return Object.defineProperty(i,\"size\",{get:function(){return v(this[G]).size}}),i.has=function(t){return v(this[G]).has(t)},i.set=function(t,n){var r=this[G];return u(r),v(r).has(t)&&v(r).get(t)===n||(e(r),z(r),r.D.set(t,!0),r.i.set(t,n),r.D.set(t,!0)),this},i.delete=function(t){if(!this.has(t))return!1;var n=this[G];return u(n),e(n),z(n),n.D.set(t,!1),n.i.delete(t),!0},i.clear=function(){var t=this[G];return u(t),e(t),z(t),t.D=new Map,t.i.clear()},i.forEach=function(t,n){var r=this;v(this[G]).forEach((function(e,i){t.call(n,r.get(i),i,r)}))},i.get=function(t){var n=this[G];u(n);var i=v(n).get(t);if(n.R||!r(i))return i;if(i!==n.u.get(t))return i;var o=R(n.A.h,i,n);return e(n),n.i.set(t,o),o},i.keys=function(){return v(this[G]).keys()},i.values=function(){var t,n=this,r=this.keys();return(t={})[H]=function(){return n.values()},t.next=function(){var t=r.next();return t.done?t:{done:!1,value:n.get(t.value)}},t},i.entries=function(){var t,n=this,r=this.keys();return(t={})[H]=function(){return n.entries()},t.next=function(){var t=r.next();if(t.done)return t;var e=n.get(t.value);return{done:!1,value:[t.value,e]}},t},i[H]=function(){return this.entries()},t}(),a=function(){function t(t,n){return this[G]={t:3,l:n,A:n?n.A:b(),P:!1,R:!1,i:void 0,u:t,k:this,p:new Map,O:!1,I:!1},this}n(t,Set);var r=t.prototype;return Object.defineProperty(r,\"size\",{get:function(){return v(this[G]).size}}),r.has=function(t){var n=this[G];return u(n),n.i?!!n.i.has(t)||!(!n.p.has(t)||!n.i.has(n.p.get(t))):n.u.has(t)},r.add=function(t){var n=this[G];return u(n),this.has(t)||(i(n),z(n),n.i.add(t)),this},r.delete=function(t){if(!this.has(t))return!1;var n=this[G];return u(n),i(n),z(n),n.i.delete(t)||!!n.p.has(t)&&n.i.delete(n.p.get(t))},r.clear=function(){var t=this[G];return u(t),i(t),z(t),t.i.clear()},r.values=function(){var t=this[G];return u(t),i(t),t.i.values()},r.entries=function(){var t=this[G];return u(t),i(t),t.i.entries()},r.keys=function(){return this.values()},r[H]=function(){return this.values()},r.forEach=function(t,n){for(var r=this.values(),e=r.next();!e.done;)t.call(n,e.value,e.value,this),e=r.next()},t}();_(\"MapSet\",{$:function(t,n){return new f(t,n)},C:function(t,n){return new a(t,n)}})}var C;Object.defineProperty(exports,\"__esModule\",{value:!0});var I,J=\"undefined\"!=typeof Symbol&&\"symbol\"==typeof Symbol(\"x\"),N=\"undefined\"!=typeof Map,W=\"undefined\"!=typeof Set,X=\"undefined\"!=typeof Proxy&&void 0!==Proxy.revocable&&\"undefined\"!=typeof Reflect,q=J?Symbol(\"immer-nothing\"):((C={})[\"immer-nothing\"]=!0,C),B=J?Symbol(\"immer-draftable\"):\"__$immer_draftable\",G=J?Symbol(\"immer-state\"):\"__$immer_state\",H=\"undefined\"!=typeof Symbol&&Symbol.iterator||\"@@iterator\",L=\"undefined\"!=typeof Reflect&&Reflect.ownKeys?Reflect.ownKeys:void 0!==Object.getOwnPropertySymbols?function(t){return Object.getOwnPropertyNames(t).concat(Object.getOwnPropertySymbols(t))}:Object.getOwnPropertyNames,Q=Object.getOwnPropertyDescriptors||function(t){var n={};return L(t).forEach((function(r){n[r]=Object.getOwnPropertyDescriptor(t,r)})),n},T={},U={get:function(t,n){if(n===G)return t;var e=v(t);if(!u(e,n))return function(t,n,r){if(r in n)for(var e=Object.getPrototypeOf(n);e;){var i,u=Object.getOwnPropertyDescriptor(e,r);if(u)return\"value\"in u?u.value:null===(i=u.get)||void 0===i?void 0:i.call(t.k);e=Object.getPrototypeOf(e)}}(t,e,n);var i=e[n];return t.R||!r(i)?i:i===A(t.u,n)?(E(t),t.i[n]=R(t.A.h,i,t)):i},has:function(t,n){return n in v(t)},ownKeys:function(t){return Reflect.ownKeys(v(t))},set:function(t,n,r){if(t.D[n]=!0,!t.P){if(a(r,A(v(t),n))&&void 0!==r)return!0;E(t),z(t)}return t.i[n]=r,!0},deleteProperty:function(t,n){return void 0!==A(t.u,n)||n in t.u?(t.D[n]=!1,E(t),z(t)):delete t.D[n],t.i&&delete t.i[n],!0},getOwnPropertyDescriptor:function(t,n){var r=v(t),e=Reflect.getOwnPropertyDescriptor(r,n);return e?{writable:!0,configurable:1!==t.t||\"length\"!==n,enumerable:e.enumerable,value:r[n]}:e},defineProperty:function(){t(11)},getPrototypeOf:function(t){return Object.getPrototypeOf(t.u)},setPrototypeOf:function(){t(12)}},V={};e(U,(function(t,n){V[t]=function(){return arguments[0]=arguments[0][0],n.apply(this,arguments)}})),V.deleteProperty=function(t,n){return U.deleteProperty.call(this,t[0],n)},V.set=function(t,n,r){return U.set.call(this,t[0],n,r,t[0])};var Y=function(){function e(t){this.S=X,this.K=!1,\"boolean\"==typeof(null==t?void 0:t.useProxies)&&this.setUseProxies(t.useProxies),\"boolean\"==typeof(null==t?void 0:t.autoFreeze)&&this.setAutoFreeze(t.autoFreeze),this.produce=this.produce.bind(this),this.produceWithPatches=this.produceWithPatches.bind(this)}var i=e.prototype;return i.produce=function(n,e,i){if(\"function\"==typeof n&&\"function\"!=typeof e){var u=e;e=n;var o=this;return function(t){var n=this;void 0===t&&(t=u);for(var r=arguments.length,i=Array(r>1?r-1:0),f=1;f<r;f++)i[f-1]=arguments[f];return o.produce(t,(function(t){var r;return(r=e).call.apply(r,[n,t].concat(i))}))}}var f;if(\"function\"!=typeof e&&t(6),void 0!==i&&\"function\"!=typeof i&&t(7),r(n)){var a=x(this),c=R(this,n,void 0),s=!0;try{f=e(c),s=!1}finally{s?j(a):O(a)}return\"undefined\"!=typeof Promise&&f instanceof Promise?f.then((function(t){return m(a,i),S(t,a)}),(function(t){throw j(a),t})):(m(a,i),S(f,a))}if(!n||\"object\"!=typeof n){if((f=e(n))===q)return;return void 0===f&&(f=n),this.K&&l(f,!0),f}t(21,n)},i.produceWithPatches=function(t,n){var r,e,i=this;return\"function\"==typeof t?function(n){for(var r=arguments.length,e=Array(r>1?r-1:0),u=1;u<r;u++)e[u-1]=arguments[u];return i.produceWithPatches(n,(function(n){return t.apply(void 0,[n].concat(e))}))}:[this.produce(t,n,(function(t,n){r=t,e=n})),r,e]},i.createDraft=function(e){r(e)||t(8),n(e)&&(e=k(e));var i=x(this),u=R(this,e,void 0);return u[G].I=!0,O(i),u},i.finishDraft=function(t,n){var r=(t&&t[G]).A;return m(r,n),S(void 0,r)},i.setAutoFreeze=function(t){this.K=t},i.setUseProxies=function(n){n&&!X&&t(20),this.S=n},i.applyPatches=function(t,r){var e;for(e=r.length-1;e>=0;e--){var i=r[e];if(0===i.path.length&&\"replace\"===i.op){t=i.value;break}}var u=y(\"Patches\").W;return n(t)?u(t,r):this.produce(t,(function(t){return u(t,r.slice(e+1))}))},e}(),Z=new Y,tt=Z.produce,nt=Z.produceWithPatches.bind(Z),rt=Z.setAutoFreeze.bind(Z),et=Z.setUseProxies.bind(Z),it=Z.applyPatches.bind(Z),ut=Z.createDraft.bind(Z),ot=Z.finishDraft.bind(Z);exports.Immer=Y,exports.applyPatches=it,exports.castDraft=function(t){return t},exports.castImmutable=function(t){return t},exports.createDraft=ut,exports.current=k,exports.default=tt,exports.enableAllPlugins=function(){D(),$(),K()},exports.enableES5=D,exports.enableMapSet=$,exports.enablePatches=K,exports.finishDraft=ot,exports.immerable=B,exports.isDraft=n,exports.isDraftable=r,exports.nothing=q,exports.original=function(r){return n(r)||t(23,r),r[G].u},exports.produce=tt,exports.produceWithPatches=nt,exports.setAutoFreeze=rt,exports.setUseProxies=et;\n//# sourceMappingURL=immer.cjs.production.min.js.map\n","import p5 from \"p5\";\n\nexport interface State {\n  p5: p5;\n  grid: number[][];\n}\n\nconst X_DIM = window.innerWidth;\nconst Y_DIM = window.innerHeight - 4;\n\nconst X_WIDTH = X_DIM * 2;\nconst Y_HEIGHT = Y_DIM * 2;\nconst DENSITY = 3;\nconst STEP_LENGTH = 10;\nconst NUM_STEPS = 5;\n\nfunction nByMArray<T>(n: number, m: number, fillWith: T) {\n  const rows = Array<T[]>(n).fill([]);\n  return rows.map((_row) => Array<T>(m).fill(fillWith));\n}\n\nfunction getLoading() {\n  const element = document.getElementById(\"loading\");\n  if (element == null) throw new Error(\"no element\");\n  return element;\n}\n\n// @ts-ignore\np5.disableFriendlyErrors = true;\n\nexport function setup(sketch: p5): State {\n  const loading = getLoading();\n  loading.innerHTML = \"Loading...\";\n\n  sketch.createCanvas(X_DIM, Y_DIM);\n\n  const grid = nByMArray(\n    Math.floor(Y_HEIGHT / DENSITY),\n    Math.floor(X_WIDTH / DENSITY),\n    0\n  );\n\n  const MODE: string = \"RANDOM\";\n\n  for (let grid_y = 0; grid_y < grid.length; grid_y++) {\n    for (let grid_x = 0; grid_x < grid[grid_y].length; grid_x++) {\n      if (MODE === \"CURVE\") {\n        const angle = (grid_y / grid.length) * Math.PI;\n        grid[grid_y][grid_x] = angle;\n      } else if (MODE === \"PERLIN\") {\n        // Perlin noise\n        // As a general rule the smaller the difference between coordinates, the\n        // smoother the resulting noise sequence will be. Steps of 0.005-0.03\n        // work best for most applications, but this will differ depending on use.\n        const scaled_x = grid_x * 0.01;\n        const scaled_y = grid_y * 0.01;\n        const noise_val = sketch.noise(scaled_x, scaled_y);\n        const angle = sketch.map(noise_val, 0, 1, 0, 2 * Math.PI);\n        grid[grid_y][grid_x] = angle;\n      } else if (MODE === \"RANDOM\") {\n        const angle = sketch.map(Math.random(), 0, 1, 0, 2 * Math.PI);\n        grid[grid_y][grid_x] = angle;\n      }\n    }\n  }\n\n  return { p5: sketch, grid };\n}\n\nexport function updateState(state: State): void {\n  const sketch = state.p5;\n  const { movedY, movedX } = (sketch as any) as {\n    movedX: number;\n    movedY: number;\n  };\n\n  if (!sketch.mouseIsPressed) return;\n  if (movedX || movedY) {\n    const angle = Math.atan2(movedY, movedX);\n\n    const grid_x0 = Math.floor((sketch.pmouseX + X_DIM / 2) / DENSITY);\n    const grid_y0 = Math.floor((sketch.pmouseY + Y_DIM / 2) / DENSITY);\n\n    const grid_x1 = Math.floor((sketch.mouseX + X_DIM / 2) / DENSITY);\n    const grid_y1 = Math.floor((sketch.mouseY + Y_DIM / 2) / DENSITY);\n\n    // https://stackoverflow.com/questions/4672279/bresenham-algorithm-in-javascript\n    function line(x0: number, y0: number, x1: number, y1: number) {\n      let dx = Math.abs(x1 - x0);\n      let dy = Math.abs(y1 - y0);\n      let sx = x0 < x1 ? 1 : -1;\n      let sy = y0 < y1 ? 1 : -1;\n      let err = dx - dy;\n\n      while (true) {\n        if (0 <= y0 && y0 < state.grid.length) {\n          if (0 <= x0 && x0 < state.grid[y0].length) {\n            state.grid[y0][x0] = angle;\n          }\n        }\n\n        if (x0 === x1 && y0 === y1) break;\n        var e2 = 2 * err;\n        if (e2 > -dy) {\n          err -= dy;\n          x0 += sx;\n        }\n        if (e2 < dx) {\n          err += dx;\n          y0 += sy;\n        }\n      }\n    }\n\n    line(grid_x0, grid_y0, grid_x1, grid_y1);\n  }\n}\n\nexport function draw(sketch: p5, state: State) {\n  const { grid } = state;\n\n  sketch.noLoop();\n\n  const { movedY, movedX } = (sketch as any) as {\n    movedX: number;\n    movedY: number;\n  };\n\n  // Don't re-render unnecessarily\n  if (\n    sketch.frameCount > 1 &&\n    movedX === 0 &&\n    movedY === 0 &&\n    sketch.mouseIsPressed\n  )\n    return;\n  sketch.background(250, 245, 235);\n\n  // for (let grid_y = 0; grid_y < grid.length; grid_y++) {\n  //   for (let grid_x = 0; grid_x < grid[grid_y].length; grid_x++) {\n  //     const canvas_x = Math.floor(grid_x * DENSITY - X_DIM / 2);\n  //     const canvas_y = Math.floor(grid_y * DENSITY - Y_DIM / 2);\n\n  //     const angle = grid[grid_y][grid_x];\n\n  //     sketch.line(\n  //       canvas_x,\n  //       canvas_y,\n  //       canvas_x + 0.5 * DENSITY * Math.cos(angle),\n  //       canvas_y + 0.5 * DENSITY * Math.sin(angle)\n  //     );\n  //   }\n  // }\n\n  sketch.noFill();\n  sketch.stroke(\"red\");\n\n  sketch.strokeWeight(1);\n  let c = 0;\n\n  for (\n    let start_y = -Y_DIM / 2;\n    start_y < (3 * Y_DIM) / 2;\n    start_y += DENSITY * 1.5\n  ) {\n    for (\n      let start_x = -X_DIM / 2;\n      start_x < (3 * X_DIM) / 2;\n      start_x += DENSITY * 1.5\n    ) {\n      c++;\n      c % 2 === 0 ? sketch.stroke(\"red\") : sketch.stroke(\"black\");\n\n      sketch.beginShape();\n      let canvas_x = /* Math.random() * X_WIDTH - X_DIM / 2; */ start_x;\n      let canvas_y = /* Math.random() * Y_HEIGHT - Y_DIM / 2; */ start_y;\n      let curr_angle: number | undefined;\n      for (let step = 0; step < NUM_STEPS; step++) {\n        sketch.curveVertex(canvas_x, canvas_y);\n\n        const grid_x = Math.floor((canvas_x + X_DIM / 2) / DENSITY);\n        const grid_y = Math.floor((canvas_y + Y_DIM / 2) / DENSITY);\n\n        if (grid_y < 0 || grid_y > grid.length - 1) break;\n        if (grid_x < 0 || grid_x > grid[grid_y].length - 1) break;\n        const target_angle = grid[grid_y][grid_x];\n\n        if (curr_angle == null) {\n          curr_angle = target_angle;\n        }\n\n        const CLAMP_ANGLE: boolean = true;\n\n        if (CLAMP_ANGLE) {\n          // https://stackoverflow.com/questions/1878907/the-smallest-difference-between-2-angles\n          const angle_diff = Math.atan2(\n            Math.sin(target_angle - curr_angle),\n            Math.cos(target_angle - curr_angle)\n          );\n\n          curr_angle =\n            curr_angle +\n            sketch.constrain(angle_diff, -Math.PI / 8, Math.PI / 8);\n        } else {\n          curr_angle = target_angle;\n        }\n\n        const x_step = STEP_LENGTH * Math.cos(curr_angle);\n        const y_step = STEP_LENGTH * Math.sin(curr_angle);\n\n        canvas_x += x_step;\n        canvas_y += y_step;\n      }\n\n      sketch.endShape();\n    }\n  }\n\n  getLoading().innerHTML = \"\";\n\n  return state;\n}\n"],"names":["_p","_interopRequireDefault","require","_immer","_sketch","p5","sketch","state","setup","draw","default","updateState","document","getElementById","module","exports","t","n","arguments","length","r","Array","e","Error","join","G","Object","getPrototypeOf","prototype","isArray","B","constructor","c","s","i","keys","L","forEach","u","has","hasOwnProperty","call","o","get","f","set","delete","add","a","N","Map","W","Set","v","p","slice","Q","writable","configurable","enumerable","value","create","l","d","clear","h","freeze","isFrozen","y","T","_","b","I","m","j","O","w","x","S","M","P","g","q","A","R","k","F","D","concat","K","z","E","$","C","U","V","Proxy","revocable","revoke","proxy","J","push","from","this","getOwnPropertyDescriptor","defineProperties","defineProperty","Math","min","map","entries","path","op","splice","unshift","JSON","stringify","setPrototypeOf","__proto__","size","values","H","next","done","Symbol","X","Reflect","iterator","ownKeys","getOwnPropertySymbols","getOwnPropertyNames","getOwnPropertyDescriptors","deleteProperty","apply","Y","useProxies","setUseProxies","autoFreeze","setAutoFreeze","produce","bind","produceWithPatches","Promise","then","createDraft","finishDraft","applyPatches","Z","tt","nt","rt","et","it","ut","ot","Immer","castDraft","castImmutable","current","enableAllPlugins","enableES5","enableMapSet","enablePatches","immerable","isDraft","isDraftable","nothing","original","getLoading","innerHTML","createCanvas","X_DIM","Y_DIM","grid","floor","Y_HEIGHT","X_WIDTH","fillWith","fill","_row","grid_y","grid_x","angle","random","PI","movedY","movedX","mouseIsPressed","atan2","grid_x0","pmouseX","grid_y0","pmouseY","grid_x1","mouseX","grid_y1","mouseY","x0","y0","x1","y1","dx","abs","dy","sx","sy","err","e2","line","noLoop","frameCount","background","noFill","stroke","strokeWeight","start_y","DENSITY","start_x","beginShape","curr_angle","canvas_x","canvas_y","step","curveVertex","target_angle","angle_diff","sin","cos","constrain","x_step","y_step","endShape","window","innerWidth","innerHeight","element","disableFriendlyErrors"],"version":3,"file":"index.b106538e.js.map"}