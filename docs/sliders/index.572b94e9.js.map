{"mappings":"4pCAAA,IAAAA,EAAAC,EAAAC,EAAA,UACAC,EAAAF,EAAAC,EAAA,+hBAEA,IAAIE,EAAUC,aAAaC,QAAQ,WACnC,MAAMC,EACe,iBAAZH,EAAuBI,SAASJ,EAAS,SAAMK,EAElDC,EAAM,KACV,MAAOC,EAASC,GAAcZ,EAAMa,SACnB,MAAfN,EAAsB,GAAKA,GAI7BF,aAAaS,QAAQ,UAAWH,EAAQI,YAExC,MAAMC,EAAc,IAAIC,MAAMN,GAASO,QAAQC,IAAKC,GAClDpB,EAAAqB,cAAA,QAAA,CACEC,KAAK,QACLC,IAAI,IACJC,IAAI,MACJC,MAAOd,EACPe,SAAWC,GAAMf,EAAWe,EAAEC,OAAOC,eACrCC,IAAKV,KAGT,OACEpB,EAAAqB,cAAA,MAAA,KACGV,EACDX,EAAAqB,cAAA,MAAA,KAAML,KAKZb,EAAS4B,OAAO/B,EAAAqB,cAACX,EAAD,MAASsB,SAASC,eAAe","sources":["./src/sliders/index.tsx"],"sourcesContent":["import * as React from \"react\";\nimport * as ReactDOM from \"react-dom\";\n\nlet storage = localStorage.getItem(\"sliders\") as unknown;\nconst preExisting =\n  typeof storage === \"string\" ? parseInt(storage, 10) : undefined;\n\nconst App = () => {\n  const [sliders, setSliders] = React.useState(\n    preExisting == null ? 10 : preExisting\n  );\n\n  // Lol side effect in the render function\n  localStorage.setItem(\"sliders\", sliders.toString());\n\n  const sliderNodes = [...Array(sliders).keys()].map((n) => (\n    <input\n      type=\"range\"\n      min=\"0\"\n      max=\"100\"\n      value={sliders}\n      onChange={(e) => setSliders(e.target.valueAsNumber)}\n      key={n}\n    />\n  ));\n  return (\n    <div>\n      {sliders}\n      <div>{sliderNodes}</div>\n    </div>\n  );\n};\n\nReactDOM.render(<App />, document.getElementById(\"react\"!));\n"],"names":["React","_interopRequireWildcard","require","ReactDOM","storage","localStorage","getItem","preExisting","parseInt","undefined","App","sliders","setSliders","useState","setItem","toString","sliderNodes","Array","keys","map","n","createElement","type","min","max","value","onChange","e","target","valueAsNumber","key","render","document","getElementById"],"version":3,"file":"index.572b94e9.js.map"}